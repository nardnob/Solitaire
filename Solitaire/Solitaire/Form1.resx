<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAQAAAAHQAAAB8AAAAfTU1NSU1NTUkAAAAfAAAAHwAAAB4AAAASAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAACAAAAA8AAAAQGxsbH2ZmZnRmZmZ0GxsbHwAAABAAAAAPAAAACQAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbAnJyclmxsbGGsbGxhnJycllbW1sCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkZGRAYaGhkqfn5+B+vr6mPr6+pifn5+BhoaGSpGR
        kQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnZ2dAZqamkmrq6t/8PDwl/T09Jnz8/OZ7u7ul6ur
        q3+amppJnZ2dAQAAAAAAAAAAAAAAAAAAAAAAAAAAoqKiAaCgoEexsbGA6enpl+fn55nm5uaZ5ubmmefn
        55nk5OSXr6+vgKCgoEeioqIBAAAAAAAAAAAAAAAAAAAAAKenpzqysrJ+5ubml9ra2pnZ2dmZ2dnZmdnZ
        2ZnZ2dmZ2dnZmdra2pevr69+p6enOgAAAAAAAAAAAAAAAK2trRavr6935+fnlM/Pz5nKysqZysrKmcrK
        ypnKysqZysrKmcrKypnMzMyZ0NDQlK6urnetra0WAAAAAAAAAACysrJK1NTUh+Xl5ZnU1NSZyMjImcDA
        wJm/v7+Zv7+/mb+/v5m/v7+Zv7+/mcfHx5nBwcGHsrKySgAAAAAAAAAAuLi4a/Ly8pPX19eZ19fXmdfX
        15nS0tKZycnJmcDAwJm6urqZt7e3mbe3t5m7u7uZ1NTUk7i4uGsAAAAAvb29A729vXj19fWZ39/fmd/f
        35nf39+Z4eHhmevr65jq6uqY4eHhmd/f35nf39+Z39/fme/v75m9vb14vb29A8HBwQTDw8N6+Pj4me3t
        7Znt7e2Z7e3tmfb29pnq6uqK6urqivb29pnt7e2Z7e3tme3t7Zn4+PiZw8PDesHBwQTExMQBxcXFcfj4
        +JL8/PyZ/Pz8mfz8/Jn9/f2WyMjIeMjIyHj8/PyW/Pz8mfz8/Jn8/PyZ+Pj4ksXFxXHExMQBAAAAAMjI
        yDrX19d9+/v7k////5n6+vqS19fXfsnJyUTJyclE19fXfvr6+pL///+Z+/v7k9bW1n3IyMg6AAAAAAAA
        AADLy8sBzMzMP8zMzHLMzMx3zMzMbszMzD3Ly8sCy8vLAszMzD3MzMxuzMzMd8zMzHLMzMw/y8vLAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAwAMAAMADAAD4HwAA8A8AAOAHAADAAwAAwAMAAIABAACAAQAAgAEAAAAAAAAAAAAAAAAAAIAB
        AACAAQAA//8AAA==
</value>
  </data>
</root>